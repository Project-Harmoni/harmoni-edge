/**
* This migration is a sync from the online test environment.
* Several changes were manually made there, including adjustments
* to the songs and albums tables and the addition of the 
* platform_constants table.
*
* Moving forward, migrations should typically be coded first
* and then pushed online.
*/


alter table "public"."songs" drop constraint "songs_album_id_fkey";

alter table "public"."songs" drop constraint "songs_payout_threshold_check";

create table "public"."platform_constants" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "value" text
);


alter table "public"."albums" add column "is_explicit" boolean not null default false;

alter table "public"."albums" alter column "duration" set data type double precision using "duration"::double precision;

alter table "public"."albums" alter column "year_released" set data type text using "year_released"::text;

alter table "public"."songs" drop column "album_id";

alter table "public"."songs" drop column "payout_percent";

alter table "public"."songs" add column "album_name" text;

alter table "public"."songs" add column "artist_payout_percentage" integer default 0;

alter table "public"."songs" add column "payout_type" text default 'proportional'::text;

alter table "public"."songs" alter column "ordinal" set default 0;

alter table "public"."songs" alter column "ordinal" set data type integer using "ordinal"::integer;

alter table "public"."songs" alter column "payout_threshold" set default 100;

alter table "public"."tag_category" alter column "category_id" set generated by default;

CREATE UNIQUE INDEX platform_constants_pkey ON public.platform_constants USING btree (id);

alter table "public"."platform_constants" add constraint "platform_constants_pkey" PRIMARY KEY using index "platform_constants_pkey";

grant delete on table "public"."platform_constants" to "anon";

grant insert on table "public"."platform_constants" to "anon";

grant references on table "public"."platform_constants" to "anon";

grant select on table "public"."platform_constants" to "anon";

grant trigger on table "public"."platform_constants" to "anon";

grant truncate on table "public"."platform_constants" to "anon";

grant update on table "public"."platform_constants" to "anon";

grant delete on table "public"."platform_constants" to "authenticated";

grant insert on table "public"."platform_constants" to "authenticated";

grant references on table "public"."platform_constants" to "authenticated";

grant select on table "public"."platform_constants" to "authenticated";

grant trigger on table "public"."platform_constants" to "authenticated";

grant truncate on table "public"."platform_constants" to "authenticated";

grant update on table "public"."platform_constants" to "authenticated";

grant delete on table "public"."platform_constants" to "service_role";

grant insert on table "public"."platform_constants" to "service_role";

grant references on table "public"."platform_constants" to "service_role";

grant select on table "public"."platform_constants" to "service_role";

grant trigger on table "public"."platform_constants" to "service_role";

grant truncate on table "public"."platform_constants" to "service_role";

grant update on table "public"."platform_constants" to "service_role";

create policy "Enable platform constants for authenticated users only"
on "public"."platform_constants"
as permissive
for all
to authenticated
with check (true);



